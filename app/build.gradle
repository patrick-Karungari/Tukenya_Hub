apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.google.gms.google-services'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    buildFeatures {
        dataBinding = true
        // for view binding :
        viewBinding = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    defaultConfig {
        applicationId "com.patrickarungari.tukenyahub"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 2
        versionName "2.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
   /* def versionPropsFile = file('version.properties')
    def value = 0
    Properties versionProps = new Properties()
    if (!versionPropsFile.exists()) {
        versionProps['VERSION_PATCH'] = "2"
        versionProps['VERSION_NUMBER'] = "2"
        versionProps['VERSION_BUILD'] = "2"
        versionProps.store(versionPropsFile.newWriter(), null)
    }

    if (versionPropsFile.canRead()) {
        versionProps.load(new FileInputStream(versionPropsFile))
        def runTasks = gradle.startParameter.taskNames
        if ('assemble' in runTasks || 'assembleRelease' in runTasks || 'aR' in runTasks) {
            value = 1
        }
        def versionMajor = 2
        def versionMinor = 2
        def versionPatch = versionProps['VERSION_PATCH'].toInteger() + value
        def versionBuild = versionProps['VERSION_BUILD'].toInteger() + 1
        def versionNumber = versionProps['VERSION_NUMBER'].toInteger() + value
        versionProps['VERSION_PATCH'] = versionPatch.toString()
        versionProps['VERSION_BUILD'] = versionBuild.toString()
        versionProps['VERSION_NUMBER'] = versionNumber.toString()
        versionProps.store(versionPropsFile.newWriter(), null)


        defaultConfig {
            applicationId "com.patrickarungari.tukenyahub"
            minSdkVersion 21
            targetSdkVersion 29
            testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
            versionCode versionProps['VERSION_NUMBER'].toInteger()
            versionName "${versionMajor}.${versionMinor}.${versionPatch}.${versionBuild}"
        }
        applicationVariants.all { variant ->
            if (variant.buildType.name == "release") {
                variant.outputs.all { output ->
                    def fileNaming = "apk/RELEASE"
                    if (output.outputFile != null && output.outputFile.name.endsWith('.apk')) {
                        def outputDirPath = new File("${getProject().getRootDir()}/${fileNaming}")
                        variant.packageApplicationProvider.get().outputDirectory = outputDirPath
                        def apkFileName = "TukenyaHub_v${android.defaultConfig.versionName}.apk"
                        output.outputFileName = apkFileName
                    }
                }
            }
        }
    } else {
        throw new FileNotFoundException("Could not read version.properties!")
    }*/
}
configurations {
    compile.exclude group: "junit", module: "junit"
}
dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'com.google.firebase:firebase-analytics:17.4.4'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta8'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.gridlayout:gridlayout:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.navigation:navigation-fragment:2.3.0'
    implementation 'androidx.navigation:navigation-ui:2.3.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation project(path: ':Preferences')
    implementation project(path: ':messenger')


    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    //inject
    implementation 'javax.inject:javax.inject:1'
    /* dagger dependency for DI*/
    implementation 'com.google.dagger:dagger:2.28.1'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.28.1'
    implementation 'com.google.dagger:dagger-android-support:2.28.1'
    // if you use the support libraries
    annotationProcessor 'com.google.dagger:dagger-android-processor:2.28.1'
    compileOnly 'javax.annotation:jsr250-api:1.0'
    /*RxJava lib*/
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.19'
    implementation 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'

    /* Firebase*/
    implementation 'com.google.firebase:firebase-database:19.3.1'
    implementation 'com.google.firebase:firebase-messaging:20.2.3'
    implementation 'com.google.firebase:firebase-auth:19.3.2'
    implementation 'com.google.firebase:firebase-core:17.4.4'
    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel:2.2.0"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata:2.2.0"
    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime:2.2.0"

    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:2.2.0"

    // Annotation processor
    //noinspection LifecycleAnnotationProcessorWithJava8
    annotationProcessor "androidx.lifecycle:lifecycle-compiler:2.2.0"
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:2.2.0"
    //noinspection LifecycleAnnotationProcessorWithJava8
    annotationProcessor 'androidx.lifecycle:lifecycle-compiler:2.2.0'
    testImplementation 'androidx.arch.core:core-testing:2.1.0'
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-runtime:2.2.0'

    // optional - helpers for implementing LifecycleOwner in a Service
    implementation "androidx.lifecycle:lifecycle-service:2.2.0"

    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
    implementation "androidx.lifecycle:lifecycle-process:2.2.0"

    // optional - ReactiveStreams support for LiveData
    implementation "androidx.lifecycle:lifecycle-reactivestreams:2.2.0"

    //dependencies
    implementation 'com.github.yalantis:ucrop:2.2.5-native'
    implementation 'com.pushlink:pushlink-android:5.5.3'
    //JSON and volley
    implementation 'com.android.volley:volley:1.1.1'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
    //MaterialDialog
    implementation 'com.shreyaspatil:MaterialDialog:2.1'
    //BungeeLib
    implementation 'com.github.Binary-Finery:Bungee:2.0'
    //permissions
    annotationProcessor "com.github.AleksanderMielczarek:AndroidAnnotationsPermissionsDispatcherPlugin:2.1.1"
    implementation "org.permissionsdispatcher:permissionsdispatcher:4.7.0"
    annotationProcessor "org.permissionsdispatcher:permissionsdispatcher-processor:4.7.0"
    //butterknife
    implementation 'com.jakewharton:butterknife:10.2.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.1'


    //core helper and compressor
    implementation 'com.github.abhidiwakar:AnstronCoreHelper:1.1'
    implementation 'com.iceteck.silicompressorr:silicompressor:2.2.3'
    //viewstate adapter
    implementation 'com.nightlynexus.viewstatepageradapter:viewstatepageradapter:1.1.0'

    //circleImageView
    implementation 'de.hdodenhof:circleimageview:3.1.0'
    //lottie
    implementation 'com.airbnb.android:lottie:3.4.1'
    //picasso and glide
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    implementation "com.squareup.picasso:picasso:2.71828"
    implementation 'jp.wasabeef:picasso-transformations:2.2.1'
    //facebook Shimmer
    implementation 'com.facebook.shimmer:shimmer:0.5.0'
    //recyclerview divider
    implementation 'com.yqritc:recyclerview-flexibledivider:1.4.0'
    //emoji
    implementation 'com.vanniktech:emoji-ios:0.6.0'
    //spinner
    implementation 'com.github.arcadefire:nice-spinner:1.4.4'
    //multidex
    implementation 'com.android.support:multidex:1.0.3'
    //country code picker
    implementation 'com.github.joielechong:countrycodepicker:2.4.2'
    //edittext
    implementation 'com.rengwuxian.materialedittext:library:2.1.4'
    implementation 'com.github.hani-momanii:SuperNova-Emoji:1.1'
    implementation 'com.github.scottyab:showhidepasswordedittext:0.8'
    //stepview
    implementation 'com.shuhart.stepview:stepview:1.5.1'
    implementation "com.daimajia.swipelayout:library:1.2.0@aar"
   /* implementation "androidx.core:core-ktx:+"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"*/
}
repositories {
    mavenCentral()
}
